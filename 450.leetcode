/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* pred(TreeNode* root){
        while(root->right) root=root->right;
        return root;
    }
    
    TreeNode* deleteNode(TreeNode* root, int key) {
        if(!root) return NULL;
        if(root->val==key){
            if(!root->left && !root->right) return NULL;
            else if(!root->left || !root->right){
                if(root->left) return root->left;
                else return root->right;
            }
            else{
                TreeNode* node=pred(root->left);
                deleteNode(root,node->val);
                root->val=node->val;
                return root;
            }
        }    
        root->left=deleteNode(root->left,key);
        root->right=deleteNode(root->right,key);
        return root;
    }
};
