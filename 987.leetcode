/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    map<int,map<int,set<int>>> mp;
    
    void go(int x,int y,TreeNode* root){
        if(!root) return;
        go(x-1,y+1,root->left);
        mp[x][y].insert(root->val);
        go(x+1,y+1,root->right);
    }
    
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        go(0,0,root);
        vector<vector<int>> vec;
        for(auto a:mp){
            vec.push_back(vector<int>());
            for(auto b:a.second){
                for(auto c:b.second) vec[vec.size()-1].push_back(c);
            }
        }
        return vec;
    }
};
