class Solution {
public:
    int find(vector<int>& bloomDay, int m, int k,int d){
        int n=bloomDay.size();
        
        int res=0,cur=0;
        
        while(cur<n){
            int cur_res=0;
            while(cur<n && bloomDay[cur]<=d) cur_res++,cur++;
            res+=cur_res/k;
            cur_res=0;
            while(cur<n && bloomDay[cur]>d) cur++;
        }
        
        return res;
    }    
    
    int minDays(vector<int>& bloomDay, int m, int k) {
        int n=bloomDay.size();
        if(n<m*k) return -1; 
        
        int lo=0,hi=0;
        
        for(int i=0;i<n;i++) hi=max(hi,bloomDay[i]);
        
        while(lo<hi){
            int md=lo+(hi-lo)/2;
            // cout<<md<<" "<<find(bloomDay,m,k,md)<<endl;
            if(find(bloomDay,m,k,md)<m) lo=md+1;
            else if(find(bloomDay,m,k,md)>=m) hi=md;
        }
        
        return lo;
    }
};
