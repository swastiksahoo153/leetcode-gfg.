/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        stack<pair<TreeNode*,TreeNode*>> stk;
        stk.push({p,q});
        while(!stk.empty()){
            pair<TreeNode*,TreeNode*> u=stk.top();
            stk.pop();
            if(!u.first && !u.second) continue;
            if(!u.first || !u.second) return 0;
            if(u.second->val!=u.first->val) return 0;
            stk.push({u.first->left,u.second->left});
            stk.push({u.first->right,u.second->right});
        }
        return 1;
    }
};
